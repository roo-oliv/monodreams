<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <OutputType>Library</OutputType>
        <TargetFramework>net8.0</TargetFramework>
        <RollForward>Major</RollForward>
        <PublishReadyToRun>false</PublishReadyToRun>
        <TieredCompilation>false</TieredCompilation>
    </PropertyGroup>
    <PropertyGroup>
        <ApplicationManifest>app.manifest</ApplicationManifest>
        <ApplicationIcon>Icon.ico</ApplicationIcon>
    </PropertyGroup>
    <PropertyGroup>
        <Authors>Rodrigo Oliveira</Authors>
        <Description>
            A code-first and data-driven opensource 2D game engine powered by MonoGame
        </Description>
        <PackageProjectUrl>https://github.com/roo-oliv/monodreams</PackageProjectUrl>
        <PackageTags>game, engine, library, monogame, 2d, xna, monodreams</PackageTags>
    </PropertyGroup>
    <PropertyGroup>
        <PackageIcon>Icon.png</PackageIcon>
    </PropertyGroup>
    <PropertyGroup>
        <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
    </PropertyGroup>
    <PropertyGroup>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
    </PropertyGroup>
    <!--
    <PropertyGroup>
        <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
        <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    </PropertyGroup>
    -->
    <PropertyGroup>
        <EnablePackageValidation>true</EnablePackageValidation>
        <!-- Optional: Detect breaking changes from a previous version -->
        <!-- <PackageValidationBaselineVersion>1.0.0</PackageValidationBaselineVersion> -->
    </PropertyGroup>
    <PropertyGroup>
        <GenerateDocumentationFile>True</GenerateDocumentationFile>
        <!-- If all members are not documented, you can disable the compiler warnings -->
        <NoWarn>$(NoWarn);CS1591</NoWarn>
    </PropertyGroup>
    <PropertyGroup>
        <PackageReadmeFile>README.md</PackageReadmeFile>
    </PropertyGroup>
    <PropertyGroup>
        <Deterministic>true</Deterministic>
        <ContinuousIntegrationBuild Condition="'$(GITHUB_ACTIONS)' == 'true'">True</ContinuousIntegrationBuild>
    </PropertyGroup>

    <PropertyGroup>
        <!-- Optional: Declare that the Repository URL can be published to NuSpec -->
        <PublishRepositoryUrl>true</PublishRepositoryUrl>

        <!-- Optional: Embed source files that are not tracked by the source control manager to the PDB -->
        <!-- This is useful if you generate files during the build -->
        <EmbedUntrackedSources>true</EmbedUntrackedSources>

        <!-- Generate symbol packages (.snupkg) -->
        <!-- You must publish both packages, the package that contains the DLL (.nupkg) and the one that contains the symbols (.snupkg) -->
        <IncludeSymbols>true</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Facebook.Yoga" Version="1.5.0-pre1" />
        <PackageReference Include="Iguina" Version="1.1.2" />
        <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1-*" PrivateAssets="All"/>
    </ItemGroup>

    <ItemGroup>
        <!-- Add a README.md next to the csproj -->
        <None Include="README.md" Pack="true" PackagePath=""/>
    </ItemGroup>
    <ItemGroup>
        <None Remove="Icon.ico" />
        <None Remove="Core\**" />
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Include="Icon.ico" />
        <EmbeddedResource Remove="Core\**" />
    </ItemGroup>
    <ItemGroup>
        <None Include="Icon.png" Pack="true" PackagePath="\" />
    </ItemGroup>
    <ItemGroup>
        <PackageReference Include="DefaultEcs" Version="0.17.2" />
        <PackageReference Include="DotNet.ReproducibleBuilds" Version="1.1.1">
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
          <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Include="MinVer" Version="5.0.0">
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
          <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Include="MonoGame.Extended.Content.Pipeline" Version="3.8.0" />
        <PackageReference Include="MonoGame.Framework.DesktopGL" Version="3.8.1.303" />
        <PackageReference Include="MonoGame.Content.Builder.Task" Version="3.8.1.303" />
        <PackageReference Include="MonoGame.ImGuiNet" Version="1.0.5" />
        <PackageReference Include="SpriteFontPlus" Version="0.9.2" />
    </ItemGroup>
    <ItemGroup>
      <Compile Remove="Core\**" />
    </ItemGroup>
    <ItemGroup>
      <Reference Include="MonoGame.Extended">
        <HintPath>..\..\..\..\.nuget\packages\monogame.extended\3.8.0\lib\netstandard2.0\MonoGame.Extended.dll</HintPath>
      </Reference>
      <Reference Include="Monogame.ImGuiNet">
        <HintPath>..\..\..\..\.nuget\packages\monogame.imguinet\1.0.5\Monogame.ImGuiNet.dll</HintPath>
      </Reference>
    </ItemGroup>
    <ItemGroup>
      <ClCompile Include="Effect\MultiTextureEffect.fx" />
    </ItemGroup>
    <ItemGroup>
      <Content Include="bin\Debug\net8.0\Monogame.ImGuiNet.dll" />
    </ItemGroup>
    <Target Name="RestoreDotnetTools" BeforeTargets="Restore">
        <Message Text="Restoring dotnet tools" Importance="High" />
        <Exec Command="dotnet tool restore" />
    </Target>
</Project>